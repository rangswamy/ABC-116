- name: Setup environment and run Terraform on Azure VM
  hosts: all
  become: true

  tasks:
    - name: Install Git, curl, and unzip
      apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - git
        - unzip
        - curl

    - name: Install Terraform binary if not already installed
      shell: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
        apt-add-repository -y "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        apt-get update && apt-get install -y terraform
      args:
        creates: /usr/bin/terraform

    - name: Delete existing /Terraformev if it exists
      file:
        path: /Terraformev
        state: absent

    - name: Ensure destination directory exists
      file:
        path: /Terraformev
        state: directory
        mode: '0755'

    - name: Clone Git repository into /Terraformev
      git:
        repo: 'https://github.com/rangswamy/Terraformev.git'
        dest: /Terraformev
        force: yes

    - name: List contents to verify clone success
      shell: ls -l /Terraformev
      register: ls_output

    - name: Show cloned directory structure
      debug:
        var: ls_output.stdout_lines

    - name: Execute Terraform script
      shell: |
        terraform init
        terraform apply -auto-approve
      args:
        chdir: /Terraformev
      register: tf_output

    - name: Show Terraform apply output
      debug:
        var: tf_output.stdout_lines

    - name: Capture Terraform output
      shell: terraform output
      register: output_result
      changed_when: false
      args:
        chdir: /Terraformev

    - name: Display Terraform output
      debug:
        var: output_result.stdout

    - name: Cleanup cloned files
      file:
        path: /Terraformev
        state: absent

